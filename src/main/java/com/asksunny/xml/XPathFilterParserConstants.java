/* Generated By:JavaCC: Do not edit this line. XPathFilterParserConstants.java */
package com.asksunny.xml;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XPathFilterParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 4;
  /** RegularExpression Id. */
  int OR = 5;
  /** RegularExpression Id. */
  int IDENTIFIER = 6;
  /** RegularExpression Id. */
  int NUMERIC = 7;
  /** RegularExpression Id. */
  int SINGLEQUOTED_STRING = 8;
  /** RegularExpression Id. */
  int DOUBLEQUOTED_STRING = 9;
  /** RegularExpression Id. */
  int DOLLAR = 10;
  /** RegularExpression Id. */
  int ATTR = 11;
  /** RegularExpression Id. */
  int ELEM = 12;
  /** RegularExpression Id. */
  int BOTH = 13;
  /** RegularExpression Id. */
  int LPAREN = 14;
  /** RegularExpression Id. */
  int RPAREN = 15;
  /** RegularExpression Id. */
  int LFBRKT = 16;
  /** RegularExpression Id. */
  int RFBRKT = 17;
  /** RegularExpression Id. */
  int PATH_SEPARATOR = 18;
  /** RegularExpression Id. */
  int MATCHOP = 19;
  /** RegularExpression Id. */
  int NOTMATCHOP = 20;
  /** RegularExpression Id. */
  int GE = 21;
  /** RegularExpression Id. */
  int GT = 22;
  /** RegularExpression Id. */
  int NOTEQ = 23;
  /** RegularExpression Id. */
  int EQ = 24;
  /** RegularExpression Id. */
  int LE = 25;
  /** RegularExpression Id. */
  int LT = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"&&\"",
    "\"||\"",
    "<IDENTIFIER>",
    "<NUMERIC>",
    "<SINGLEQUOTED_STRING>",
    "<DOUBLEQUOTED_STRING>",
    "\"$\"",
    "\"@\"",
    "\"*\"",
    "\"&\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"/\"",
    "\"=~\"",
    "\"!~\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"=\"",
    "\"<=\"",
    "\"<\"",
    "<LETTER>",
    "<DIGIT>",
  };

}
